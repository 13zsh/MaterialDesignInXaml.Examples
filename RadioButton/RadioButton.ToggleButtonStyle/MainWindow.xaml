<Window x:Class="RadioButton.ToggleButtonStyle.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RadioButton.ToggleButtonStyle"
        xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <Style x:Key="MaterialDesignActionRadioButton" TargetType="{x:Type RadioButton}">
            <Style.Resources>
                <Style TargetType="wpf:PackIcon" BasedOn="{StaticResource {x:Type wpf:PackIcon}}">
                    <Setter Property="Width" Value="20" />
                    <Setter Property="Height" Value="20" />
                </Style>
            </Style.Resources>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}"/>
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="wpf:ShadowAssist.ShadowDepth" Value="Depth0" />
            <Setter Property="wpf:ToggleButtonAssist.OnContent" Value="{StaticResource CheckMarkIcon}" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ShadowAssist.ShadowDepth), Converter={x:Static converters:ShadowConverter.Instance}}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.23" Storyboard.TargetProperty="(UIElement.Opacity)" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="*" To="Checked">
                                            <Storyboard FillBehavior="HoldEnd">
                                                <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OffScaleTransform">
                                                    <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.0" />
                                                    <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OnScaleTransform">
                                                    <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.1" />
                                                    <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.2" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Checked" To="Unchecked">
                                            <Storyboard FillBehavior="HoldEnd">
                                                <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OnScaleTransform">
                                                    <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.0" />
                                                    <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OffScaleTransform">
                                                    <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.1" />
                                                    <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.2" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OffScaleTransform"
                                                         To="0" />
                                            <DoubleAnimation Duration="0" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OnScaleTransform"
                                                         To="1" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OffScaleTransform"
                                                         To="1" />
                                            <DoubleAnimation Duration="0" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OnScaleTransform"
                                                         To="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateCheck"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="OffGrid" RenderTransformOrigin=".5,.5" Background="{TemplateBinding Background}">
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              FlowDirection="LeftToRight"/>
                                <Grid.Clip>
                                    <EllipseGeometry RadiusX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width, Converter={StaticResource DivisionMathConverter}, ConverterParameter=2.0}" 
                                                 RadiusY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Converter={StaticResource DivisionMathConverter}, ConverterParameter=2.0}">
                                        <EllipseGeometry.Center>
                                            <MultiBinding Converter="{StaticResource PointValueConverter}">
                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Width" Converter="{StaticResource DivisionMathConverter}" ConverterParameter="2.0" />
                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Height" Converter="{StaticResource DivisionMathConverter}" ConverterParameter="2.0" />
                                            </MultiBinding>
                                        </EllipseGeometry.Center>
                                    </EllipseGeometry>
                                </Grid.Clip>
                                <Grid.RenderTransform>
                                    <ScaleTransform x:Name="OffScaleTransform" ScaleX="1" ScaleY="1" />
                                </Grid.RenderTransform>
                            </Grid>
                            <Grid x:Name="OnGrid" RenderTransformOrigin=".5,.5" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              FlowDirection="LeftToRight"
                                              Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ToggleButtonAssist.OnContent)}"
                                              ContentTemplate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ToggleButtonAssist.OnContentTemplate)}" />
                                <Grid.Clip>
                                    <EllipseGeometry RadiusX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width, Converter={StaticResource DivisionMathConverter}, ConverterParameter=2.0}" 
                                                 RadiusY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Converter={StaticResource DivisionMathConverter}, ConverterParameter=2.0}">
                                        <EllipseGeometry.Center>
                                            <MultiBinding Converter="{StaticResource PointValueConverter}">
                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Width" Converter="{StaticResource DivisionMathConverter}" ConverterParameter="2.0" />
                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Height" Converter="{StaticResource DivisionMathConverter}" ConverterParameter="2.0" />
                                            </MultiBinding>
                                        </EllipseGeometry.Center>
                                    </EllipseGeometry>
                                </Grid.Clip>
                                <Grid.RenderTransform>
                                    <ScaleTransform x:Name="OnScaleTransform" ScaleX="0" ScaleY="1" />
                                </Grid.RenderTransform>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
            <RadioButton Style="{StaticResource MaterialDesignActionRadioButton}" Margin="0,10,0,0">
                <wpf:PackIcon Kind="Smiley" />
            </RadioButton>
            <RadioButton Style="{StaticResource MaterialDesignActionRadioButton}" Margin="0,10,0,0">
                <wpf:PackIcon Kind="SmileyAngry" />
            </RadioButton>
            <RadioButton Style="{StaticResource MaterialDesignActionRadioButton}" Margin="0,10,0,0">
                <wpf:PackIcon Kind="SmileyCry" />
            </RadioButton>
            <RadioButton Style="{StaticResource MaterialDesignActionRadioButton}" Margin="0,10,0,0">
                <wpf:PackIcon Kind="SmileyExcited" />
            </RadioButton>
        </StackPanel>
    </Grid>
</Window>
